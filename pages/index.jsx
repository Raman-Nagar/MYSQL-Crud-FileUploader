import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
const { executeQuery } = require("../connection/db");

export default function Home({ employeeData }) {

  const router = useRouter()

  const handleDelete = async (id) => {
    const res = await fetch(`/api/employee/${id}`,{
      method:"DELETE"
    });
    // console.log(res);
    if (res.status === 200) {
      alert("employee deleted succesfully");
      router.push("/")
    } else {
      console.log("something went wrong");
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="my-12 flex flex-col justify-around items-center gap-5">
        <div>
          <h1 className="text-pink-500 text-2xl font-bold ">All Employees</h1>
        </div>
        <div className="relative overflow-x-auto shadow-md sm:rounded-lg">
          <Link href={"/addemployee"} className="float-right">
            <button className="text-white bg-indigo-500 border-0 py-2 px-4 focus:outline-none hover:bg-indigo-600 rounded">
              Add Employee
            </button>
          </Link>
          <table className="w-full text-sm text-left text-gray-500 dark:text-gray-400">
            <thead className="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-6 py-3">
                  Name
                </th>
                <th scope="col" className="px-6 py-3">
                  Email
                </th>
                <th scope="col" className="px-6 py-3">
                  Phone
                </th>
                <th scope="col" className="px-6 py-3">
                  Address
                </th>
                <th scope="col" className="px-6 py-3">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody>
              {employeeData.map((emp, index) => {
                return (
                  <tr
                    key={index}
                    className="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"
                  >
                    <th className="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      {emp.name}
                    </th>
                    <td className="px-6 py-4">{emp.email}</td>
                    <td className="px-6 py-4">{emp.phone}</td>
                    <td className="px-6 py-4">{emp.address}</td>
                    <td className="px-6 py-4 flex flex-col justify-around items-center">
                      <Link
                        href={`/updateemployee/${emp.id}`}
                        className="font-medium text-blue-600 dark:text-blue-500 hover:underline"
                      >
                        Edit
                      </Link>
                      <button
                        onClick={() => handleDelete(emp.id)}
                        className="font-medium text-red-600 dark:text-blue-500 hover:underline"
                      >
                        Delete
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps(context) {
  let employeeData = await executeQuery("select * from employee", []);

  return {
    props: { employeeData: JSON.parse(JSON.stringify(employeeData)) },
  };
}
